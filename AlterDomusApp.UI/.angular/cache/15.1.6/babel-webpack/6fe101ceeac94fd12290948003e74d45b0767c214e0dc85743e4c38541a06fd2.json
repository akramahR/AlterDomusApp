{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/router\";\nexport class AppComponent {\n  constructor(http) {\n    this.title = 'AlterDomusApp.UI';\n    //http.get<WeatherForecast[]>('/weatherforecast').subscribe(result => {\n    //  this.forecasts = result;\n    //}, error => console.error(error));\n    console.log(\"sending req\");\n    http.get('/weatherforecast').subscribe(result => {\n      this.tempData = result;\n    }, error => console.error(error));\n  }\n}\nAppComponent.ɵfac = function AppComponent_Factory(t) {\n  return new (t || AppComponent)(i0.ɵɵdirectiveInject(i1.HttpClient));\n};\nAppComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: AppComponent,\n  selectors: [[\"app-root\"]],\n  decls: 6,\n  vars: 0,\n  consts: [[\"id\", \"tableLabel\"], [1, \"center\"]],\n  template: function AppComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"h1\", 0);\n      i0.ɵɵtext(1, \"Weather forecast\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"p\");\n      i0.ɵɵtext(3, \"This component demonstrates fetching data from the server.\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"div\", 1);\n      i0.ɵɵelement(5, \"router-outlet\");\n      i0.ɵɵelementEnd();\n    }\n  },\n  dependencies: [i2.RouterOutlet],\n  styles: [\".card[_ngcontent-%COMP%] {\\r\\n    box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2);\\r\\n    max-width: 300px;\\r\\n    margin: auto;\\r\\n    text-align: center;\\r\\n  }\\r\\n  .center[_ngcontent-%COMP%]{\\r\\n    margin: auto;\\r\\n    text-align: center;\\r\\n  }\\r\\n  .title[_ngcontent-%COMP%] {\\r\\n    color: grey;\\r\\n    font-size: 18px;\\r\\n  }\\r\\n  \\r\\n  button[_ngcontent-%COMP%] {\\r\\n    border: none;\\r\\n    outline: 0;\\r\\n    display: inline-block;\\r\\n    padding: 8px;\\r\\n    color: white;\\r\\n    background-color: #000;\\r\\n    text-align: center;\\r\\n    cursor: pointer;\\r\\n    width: 100%;\\r\\n    font-size: 18px;\\r\\n  }\\r\\n  \\r\\n  a[_ngcontent-%COMP%] {\\r\\n    text-decoration: none;\\r\\n    font-size: 22px;\\r\\n    color: black;\\r\\n  }\\r\\n  \\r\\n  button[_ngcontent-%COMP%]:hover, a[_ngcontent-%COMP%]:hover {\\r\\n    opacity: 0.7;\\r\\n  }\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvYXBwLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSwwQ0FBMEM7SUFDMUMsZ0JBQWdCO0lBQ2hCLFlBQVk7SUFDWixrQkFBa0I7RUFDcEI7RUFDQTtJQUNFLFlBQVk7SUFDWixrQkFBa0I7RUFDcEI7RUFDQTtJQUNFLFdBQVc7SUFDWCxlQUFlO0VBQ2pCOztFQUVBO0lBQ0UsWUFBWTtJQUNaLFVBQVU7SUFDVixxQkFBcUI7SUFDckIsWUFBWTtJQUNaLFlBQVk7SUFDWixzQkFBc0I7SUFDdEIsa0JBQWtCO0lBQ2xCLGVBQWU7SUFDZixXQUFXO0lBQ1gsZUFBZTtFQUNqQjs7RUFFQTtJQUNFLHFCQUFxQjtJQUNyQixlQUFlO0lBQ2YsWUFBWTtFQUNkOztFQUVBO0lBQ0UsWUFBWTtFQUNkIiwic291cmNlc0NvbnRlbnQiOlsiLmNhcmQge1xyXG4gICAgYm94LXNoYWRvdzogMCA0cHggOHB4IDAgcmdiYSgwLCAwLCAwLCAwLjIpO1xyXG4gICAgbWF4LXdpZHRoOiAzMDBweDtcclxuICAgIG1hcmdpbjogYXV0bztcclxuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICB9XHJcbiAgLmNlbnRlcntcclxuICAgIG1hcmdpbjogYXV0bztcclxuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICB9XHJcbiAgLnRpdGxlIHtcclxuICAgIGNvbG9yOiBncmV5O1xyXG4gICAgZm9udC1zaXplOiAxOHB4O1xyXG4gIH1cclxuICBcclxuICBidXR0b24ge1xyXG4gICAgYm9yZGVyOiBub25lO1xyXG4gICAgb3V0bGluZTogMDtcclxuICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcclxuICAgIHBhZGRpbmc6IDhweDtcclxuICAgIGNvbG9yOiB3aGl0ZTtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICMwMDA7XHJcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgICBjdXJzb3I6IHBvaW50ZXI7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIGZvbnQtc2l6ZTogMThweDtcclxuICB9XHJcbiAgXHJcbiAgYSB7XHJcbiAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XHJcbiAgICBmb250LXNpemU6IDIycHg7XHJcbiAgICBjb2xvcjogYmxhY2s7XHJcbiAgfVxyXG4gIFxyXG4gIGJ1dHRvbjpob3ZlciwgYTpob3ZlciB7XHJcbiAgICBvcGFjaXR5OiAwLjc7XHJcbiAgfVxyXG4gICJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n});","map":{"version":3,"mappings":";;;AAQA,OAAM,MAAOA,YAAY;EAIvBC,YAAYC,IAAgB;IAU5B,UAAK,GAAG,kBAAkB;IATxB;IACA;IACA;IACAC,OAAO,CAACC,GAAG,CAAC,aAAa,CAAC;IAC1BF,IAAI,CAACG,GAAG,CAAO,kBAAkB,CAAC,CAACC,SAAS,CAACC,MAAM,IAAG;MACpD,IAAI,CAACC,QAAQ,GAAGD,MAAM;IACxB,CAAC,EAAEE,KAAK,IAAIN,OAAO,CAACM,KAAK,CAACA,KAAK,CAAC,CAAC;EACnC;;AAZWT,YAAY;mBAAZA,YAAY;AAAA;AAAZA,YAAY;QAAZA,YAAY;EAAAU;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCRzBC,6BAAoB;MAAAA,gCAAgB;MAAAA,iBAAK;MAEzCA,yBAAG;MAAAA,0EAA0D;MAAAA,iBAAI;MAsBjEA,8BAAoB;MAChBA,gCAA+B;MACnCA,iBAAM","names":["AppComponent","constructor","http","console","log","get","subscribe","result","tempData","error","selectors","decls","vars","consts","template","i0"],"sourceRoot":"","sources":["C:\\Work\\AlterDomusAssignment\\AlterDomusApp.UI\\src\\app\\app.component.ts","C:\\Work\\AlterDomusAssignment\\AlterDomusApp.UI\\src\\app\\app.component.html"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\r\nimport { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  public forecasts?: WeatherForecast[];\r\n  public tempData?: User;\r\n\r\n  constructor(http: HttpClient) {\r\n    //http.get<WeatherForecast[]>('/weatherforecast').subscribe(result => {\r\n    //  this.forecasts = result;\r\n    //}, error => console.error(error));\r\n    console.log(\"sending req\");\r\n    http.get<User>('/weatherforecast').subscribe(result => {\r\n      this.tempData = result;\r\n    }, error => console.error(error));\r\n  }\r\n\r\n  title = 'AlterDomusApp.UI';\r\n}\r\n\r\ninterface User{\r\n  login: string;\r\n  bio: string;\r\n  company:string;\r\n  location:string;\r\n  avatarUrl:string;\r\n}\r\n\r\ninterface WeatherForecast {\r\n  date: string;\r\n  temperatureC: number;\r\n  temperatureF: number;\r\n  summary: string;\r\n}\r\n","<h1 id=\"tableLabel\">Weather forecast</h1>\r\n\r\n<p>This component demonstrates fetching data from the server.</p>\r\n\r\n<!--<p *ngIf=\"!forecasts\"><em>Loading... Please refresh once the ASP.NET backend has started. See <a href=\"https://aka.ms/jspsintegrationangular\">https://aka.ms/jspsintegrationangular</a> for more details.</em></p>\r\n\r\n<table *ngIf=\"forecasts\">\r\n    <thead>\r\n        <tr>\r\n            <th>Date</th>\r\n            <th>Temp. (C)</th>\r\n            <th>Temp. (F)</th>\r\n            <th>Summary</th>\r\n        </tr>\r\n    </thead>\r\n    <tbody>\r\n        <tr *ngFor=\"let forecast of forecasts\">\r\n            <td>{{ forecast.date }}</td>\r\n            <td>{{ forecast.temperatureC }}</td>\r\n            <td>{{ forecast.temperatureF }}</td>\r\n            <td>{{ forecast.summary }}</td>\r\n        </tr>\r\n    </tbody>\r\n</table>-->\r\n<div class=\"center\">\r\n    <router-outlet></router-outlet>\r\n</div>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}